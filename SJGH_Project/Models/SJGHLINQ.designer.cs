#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SJGH_Project.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_81347_sjgh")]
	public partial class SJGHLINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAppointment(Appointment instance);
    partial void UpdateAppointment(Appointment instance);
    partial void DeleteAppointment(Appointment instance);
    partial void InsertSeasonal_Dessese(Seasonal_Dessese instance);
    partial void UpdateSeasonal_Dessese(Seasonal_Dessese instance);
    partial void DeleteSeasonal_Dessese(Seasonal_Dessese instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertDoctor(Doctor instance);
    partial void UpdateDoctor(Doctor instance);
    partial void DeleteDoctor(Doctor instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertER_Wait_Time(ER_Wait_Time instance);
    partial void UpdateER_Wait_Time(ER_Wait_Time instance);
    partial void DeleteER_Wait_Time(ER_Wait_Time instance);
    partial void InsertEvent_Calendar(Event_Calendar instance);
    partial void UpdateEvent_Calendar(Event_Calendar instance);
    partial void DeleteEvent_Calendar(Event_Calendar instance);
    partial void InsertJob_Post(Job_Post instance);
    partial void UpdateJob_Post(Job_Post instance);
    partial void DeleteJob_Post(Job_Post instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertMedical_History(Medical_History instance);
    partial void UpdateMedical_History(Medical_History instance);
    partial void DeleteMedical_History(Medical_History instance);
    partial void InsertNeewFeed(NeewFeed instance);
    partial void UpdateNeewFeed(NeewFeed instance);
    partial void DeleteNeewFeed(NeewFeed instance);
    partial void InsertOR_Status(OR_Status instance);
    partial void UpdateOR_Status(OR_Status instance);
    partial void DeleteOR_Status(OR_Status instance);
    partial void InsertOrder_Item(Order_Item instance);
    partial void UpdateOrder_Item(Order_Item instance);
    partial void DeleteOrder_Item(Order_Item instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertPatient(Patient instance);
    partial void UpdatePatient(Patient instance);
    partial void DeletePatient(Patient instance);
    partial void InsertPrescription(Prescription instance);
    partial void UpdatePrescription(Prescription instance);
    partial void DeletePrescription(Prescription instance);
    partial void InsertPrescription_Refill(Prescription_Refill instance);
    partial void UpdatePrescription_Refill(Prescription_Refill instance);
    partial void DeletePrescription_Refill(Prescription_Refill instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertVolunteer_Oppoturnity(Volunteer_Oppoturnity instance);
    partial void UpdateVolunteer_Oppoturnity(Volunteer_Oppoturnity instance);
    partial void DeleteVolunteer_Oppoturnity(Volunteer_Oppoturnity instance);
    partial void InsertYouTube(YouTube instance);
    partial void UpdateYouTube(YouTube instance);
    partial void DeleteYouTube(YouTube instance);
    partial void InsertJob_Application(Job_Application instance);
    partial void UpdateJob_Application(Job_Application instance);
    partial void DeleteJob_Application(Job_Application instance);
    #endregion
		
		public SJGHLINQDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_81347_sjghConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SJGHLINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SJGHLINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SJGHLINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SJGHLINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Appointment> Appointments
		{
			get
			{
				return this.GetTable<Appointment>();
			}
		}
		
		public System.Data.Linq.Table<Seasonal_Dessese> Seasonal_Desseses
		{
			get
			{
				return this.GetTable<Seasonal_Dessese>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Doctor> Doctors
		{
			get
			{
				return this.GetTable<Doctor>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<ER_Wait_Time> ER_Wait_Times
		{
			get
			{
				return this.GetTable<ER_Wait_Time>();
			}
		}
		
		public System.Data.Linq.Table<Event_Calendar> Event_Calendars
		{
			get
			{
				return this.GetTable<Event_Calendar>();
			}
		}
		
		public System.Data.Linq.Table<Job_Post> Job_Posts
		{
			get
			{
				return this.GetTable<Job_Post>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<Medical_History> Medical_Histories
		{
			get
			{
				return this.GetTable<Medical_History>();
			}
		}
		
		public System.Data.Linq.Table<NeewFeed> NeewFeeds
		{
			get
			{
				return this.GetTable<NeewFeed>();
			}
		}
		
		public System.Data.Linq.Table<OR_Status> OR_Status
		{
			get
			{
				return this.GetTable<OR_Status>();
			}
		}
		
		public System.Data.Linq.Table<Order_Item> Order_Items
		{
			get
			{
				return this.GetTable<Order_Item>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Patient> Patients
		{
			get
			{
				return this.GetTable<Patient>();
			}
		}
		
		public System.Data.Linq.Table<Prescription> Prescriptions
		{
			get
			{
				return this.GetTable<Prescription>();
			}
		}
		
		public System.Data.Linq.Table<Prescription_Refill> Prescription_Refills
		{
			get
			{
				return this.GetTable<Prescription_Refill>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Volunteer_Oppoturnity> Volunteer_Oppoturnities
		{
			get
			{
				return this.GetTable<Volunteer_Oppoturnity>();
			}
		}
		
		public System.Data.Linq.Table<YouTube> YouTubes
		{
			get
			{
				return this.GetTable<YouTube>();
			}
		}
		
		public System.Data.Linq.Table<Job_Application> Job_Applications
		{
			get
			{
				return this.GetTable<Job_Application>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Appointment")]
	public partial class Appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _appointment_id;
		
		private int _patient_id;
		
		private int _doctor_id;
		
		private int _location_id;
		
		private System.DateTime _date;
		
		private string _time;
		
		private string _status;
		
		private string _additional_info;
		
		private EntityRef<Doctor> _Doctor;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onappointment_idChanging(int value);
    partial void Onappointment_idChanged();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void Ondoctor_idChanging(int value);
    partial void Ondoctor_idChanged();
    partial void Onlocation_idChanging(int value);
    partial void Onlocation_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onadditional_infoChanging(string value);
    partial void Onadditional_infoChanged();
    #endregion
		
		public Appointment()
		{
			this._Doctor = default(EntityRef<Doctor>);
			this._Location = default(EntityRef<Location>);
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int appointment_id
		{
			get
			{
				return this._appointment_id;
			}
			set
			{
				if ((this._appointment_id != value))
				{
					this.Onappointment_idChanging(value);
					this.SendPropertyChanging();
					this._appointment_id = value;
					this.SendPropertyChanged("appointment_id");
					this.Onappointment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int NOT NULL")]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int NOT NULL")]
		public int doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._Doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int NOT NULL")]
		public int location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_additional_info", DbType="VarChar(300)")]
		public string additional_info
		{
			get
			{
				return this._additional_info;
			}
			set
			{
				if ((this._additional_info != value))
				{
					this.Onadditional_infoChanging(value);
					this.SendPropertyChanging();
					this._additional_info = value;
					this.SendPropertyChanged("additional_info");
					this.Onadditional_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_Appointment", Storage="_Doctor", ThisKey="doctor_id", OtherKey="doctor_id", IsForeignKey=true)]
		public Doctor Doctor
		{
			get
			{
				return this._Doctor.Entity;
			}
			set
			{
				Doctor previousValue = this._Doctor.Entity;
				if (((previousValue != value) 
							|| (this._Doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doctor.Entity = null;
						previousValue.Appointments.Remove(this);
					}
					this._Doctor.Entity = value;
					if ((value != null))
					{
						value.Appointments.Add(this);
						this._doctor_id = value.doctor_id;
					}
					else
					{
						this._doctor_id = default(int);
					}
					this.SendPropertyChanged("Doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Appointment", Storage="_Location", ThisKey="location_id", OtherKey="location_id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Appointments.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Appointments.Add(this);
						this._location_id = value.location_id;
					}
					else
					{
						this._location_id = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Appointment", Storage="_Patient", ThisKey="patient_id", OtherKey="patient_id", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.Appointments.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.Appointments.Add(this);
						this._patient_id = value.patient_id;
					}
					else
					{
						this._patient_id = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Seasonal_Dessese")]
	public partial class Seasonal_Dessese : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.TimeSpan> _start_time;
		
		private string _topic;
		
		private string _description;
		
		private string _image_url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onstart_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void Onstart_timeChanged();
    partial void OntopicChanging(string value);
    partial void OntopicChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    #endregion
		
		public Seasonal_Dessese()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> start_time
		{
			get
			{
				return this._start_time;
			}
			set
			{
				if ((this._start_time != value))
				{
					this.Onstart_timeChanging(value);
					this.SendPropertyChanging();
					this._start_time = value;
					this.SendPropertyChanged("start_time");
					this.Onstart_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_topic", DbType="VarChar(100)")]
		public string topic
		{
			get
			{
				return this._topic;
			}
			set
			{
				if ((this._topic != value))
				{
					this.OntopicChanging(value);
					this.SendPropertyChanging();
					this._topic = value;
					this.SendPropertyChanged("topic");
					this.OntopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_url", DbType="VarChar(100)")]
		public string image_url
		{
			get
			{
				return this._image_url;
			}
			set
			{
				if ((this._image_url != value))
				{
					this.Onimage_urlChanging(value);
					this.SendPropertyChanging();
					this._image_url = value;
					this.SendPropertyChanged("image_url");
					this.Onimage_urlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contact_id;
		
		private string _name;
		
		private string _nature;
		
		private string _message;
		
		private System.Nullable<System.DateTime> _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncontact_idChanging(int value);
    partial void Oncontact_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnatureChanging(string value);
    partial void OnnatureChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public Contact()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int contact_id
		{
			get
			{
				return this._contact_id;
			}
			set
			{
				if ((this._contact_id != value))
				{
					this.Oncontact_idChanging(value);
					this.SendPropertyChanging();
					this._contact_id = value;
					this.SendPropertyChanged("contact_id");
					this.Oncontact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nature", DbType="VarChar(50)")]
		public string nature
		{
			get
			{
				return this._nature;
			}
			set
			{
				if ((this._nature != value))
				{
					this.OnnatureChanging(value);
					this.SendPropertyChanging();
					this._nature = value;
					this.SendPropertyChanged("nature");
					this.OnnatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="VarChar(255)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _email;
		
		private string _phone;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public Customer()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(30)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Orders", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _department_id;
		
		private int _location_id;
		
		private string _name;
		
		private string _description;
		
		private EntitySet<Volunteer_Oppoturnity> _Volunteer_Oppoturnities;
		
		private EntityRef<Location> _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondepartment_idChanging(int value);
    partial void Ondepartment_idChanged();
    partial void Onlocation_idChanging(int value);
    partial void Onlocation_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Department()
		{
			this._Volunteer_Oppoturnities = new EntitySet<Volunteer_Oppoturnity>(new Action<Volunteer_Oppoturnity>(this.attach_Volunteer_Oppoturnities), new Action<Volunteer_Oppoturnity>(this.detach_Volunteer_Oppoturnities));
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int NOT NULL")]
		public int location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(300)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Volunteer_Oppoturnity", Storage="_Volunteer_Oppoturnities", ThisKey="department_id", OtherKey="department_id")]
		public EntitySet<Volunteer_Oppoturnity> Volunteer_Oppoturnities
		{
			get
			{
				return this._Volunteer_Oppoturnities;
			}
			set
			{
				this._Volunteer_Oppoturnities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Department", Storage="_Location", ThisKey="location_id", OtherKey="location_id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._location_id = value.location_id;
					}
					else
					{
						this._location_id = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Volunteer_Oppoturnities(Volunteer_Oppoturnity entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Volunteer_Oppoturnities(Volunteer_Oppoturnity entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctor")]
	public partial class Doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doctor_id;
		
		private string _username;
		
		private string _department_name;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _email;
		
		private string _phone;
		
		private string _specialty;
		
		private string _bio;
		
		private string _photo_url;
		
		private System.Nullable<int> _status;
		
		private EntitySet<Appointment> _Appointments;
		
		private EntitySet<Medical_History> _Medical_Histories;
		
		private EntitySet<Prescription> _Prescriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondoctor_idChanging(int value);
    partial void Ondoctor_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Ondepartment_nameChanging(string value);
    partial void Ondepartment_nameChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnspecialtyChanging(string value);
    partial void OnspecialtyChanged();
    partial void OnbioChanging(string value);
    partial void OnbioChanged();
    partial void Onphoto_urlChanging(string value);
    partial void Onphoto_urlChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public Doctor()
		{
			this._Appointments = new EntitySet<Appointment>(new Action<Appointment>(this.attach_Appointments), new Action<Appointment>(this.detach_Appointments));
			this._Medical_Histories = new EntitySet<Medical_History>(new Action<Medical_History>(this.attach_Medical_Histories), new Action<Medical_History>(this.detach_Medical_Histories));
			this._Prescriptions = new EntitySet<Prescription>(new Action<Prescription>(this.attach_Prescriptions), new Action<Prescription>(this.detach_Prescriptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string department_name
		{
			get
			{
				return this._department_name;
			}
			set
			{
				if ((this._department_name != value))
				{
					this.Ondepartment_nameChanging(value);
					this.SendPropertyChanging();
					this._department_name = value;
					this.SendPropertyChanged("department_name");
					this.Ondepartment_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string specialty
		{
			get
			{
				return this._specialty;
			}
			set
			{
				if ((this._specialty != value))
				{
					this.OnspecialtyChanging(value);
					this.SendPropertyChanging();
					this._specialty = value;
					this.SendPropertyChanged("specialty");
					this.OnspecialtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bio", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string bio
		{
			get
			{
				return this._bio;
			}
			set
			{
				if ((this._bio != value))
				{
					this.OnbioChanging(value);
					this.SendPropertyChanging();
					this._bio = value;
					this.SendPropertyChanged("bio");
					this.OnbioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo_url", DbType="VarChar(100)")]
		public string photo_url
		{
			get
			{
				return this._photo_url;
			}
			set
			{
				if ((this._photo_url != value))
				{
					this.Onphoto_urlChanging(value);
					this.SendPropertyChanging();
					this._photo_url = value;
					this.SendPropertyChanged("photo_url");
					this.Onphoto_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_Appointment", Storage="_Appointments", ThisKey="doctor_id", OtherKey="doctor_id")]
		public EntitySet<Appointment> Appointments
		{
			get
			{
				return this._Appointments;
			}
			set
			{
				this._Appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_Medical_History", Storage="_Medical_Histories", ThisKey="doctor_id", OtherKey="doctor_id")]
		public EntitySet<Medical_History> Medical_Histories
		{
			get
			{
				return this._Medical_Histories;
			}
			set
			{
				this._Medical_Histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_Prescription", Storage="_Prescriptions", ThisKey="doctor_id", OtherKey="doctor_id")]
		public EntitySet<Prescription> Prescriptions
		{
			get
			{
				return this._Prescriptions;
			}
			set
			{
				this._Prescriptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = this;
		}
		
		private void detach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = null;
		}
		
		private void attach_Medical_Histories(Medical_History entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = this;
		}
		
		private void detach_Medical_Histories(Medical_History entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = null;
		}
		
		private void attach_Prescriptions(Prescription entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = this;
		}
		
		private void detach_Prescriptions(Prescription entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Document")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doc_id;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _date_posted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondoc_idChanging(int value);
    partial void Ondoc_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Ondate_postedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_postedChanged();
    #endregion
		
		public Document()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doc_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int doc_id
		{
			get
			{
				return this._doc_id;
			}
			set
			{
				if ((this._doc_id != value))
				{
					this.Ondoc_idChanging(value);
					this.SendPropertyChanging();
					this._doc_id = value;
					this.SendPropertyChanged("doc_id");
					this.Ondoc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_posted", DbType="Date")]
		public System.Nullable<System.DateTime> date_posted
		{
			get
			{
				return this._date_posted;
			}
			set
			{
				if ((this._date_posted != value))
				{
					this.Ondate_postedChanging(value);
					this.SendPropertyChanging();
					this._date_posted = value;
					this.SendPropertyChanged("date_posted");
					this.Ondate_postedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ER_Wait_Time")]
	public partial class ER_Wait_Time : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _date;
		
		private System.TimeSpan _arrival;
		
		private System.Nullable<System.TimeSpan> _check_in;
		
		private System.Nullable<decimal> _wait_time;
		
		private string _status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnarrivalChanging(System.TimeSpan value);
    partial void OnarrivalChanged();
    partial void Oncheck_inChanging(System.Nullable<System.TimeSpan> value);
    partial void Oncheck_inChanged();
    partial void Onwait_timeChanging(System.Nullable<decimal> value);
    partial void Onwait_timeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public ER_Wait_Time()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arrival", DbType="Time NOT NULL")]
		public System.TimeSpan arrival
		{
			get
			{
				return this._arrival;
			}
			set
			{
				if ((this._arrival != value))
				{
					this.OnarrivalChanging(value);
					this.SendPropertyChanging();
					this._arrival = value;
					this.SendPropertyChanged("arrival");
					this.OnarrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_check_in", DbType="Time")]
		public System.Nullable<System.TimeSpan> check_in
		{
			get
			{
				return this._check_in;
			}
			set
			{
				if ((this._check_in != value))
				{
					this.Oncheck_inChanging(value);
					this.SendPropertyChanging();
					this._check_in = value;
					this.SendPropertyChanged("check_in");
					this.Oncheck_inChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wait_time", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> wait_time
		{
			get
			{
				return this._wait_time;
			}
			set
			{
				if ((this._wait_time != value))
				{
					this.Onwait_timeChanging(value);
					this.SendPropertyChanging();
					this._wait_time = value;
					this.SendPropertyChanged("wait_time");
					this.Onwait_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(10)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_Calendar")]
	public partial class Event_Calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _event_id;
		
		private int _location_id;
		
		private string _name;
		
		private System.DateTime _start_date;
		
		private System.DateTime _end_date;
		
		private System.TimeSpan _start_time;
		
		private System.TimeSpan _end_time;
		
		private string _description;
		
		private string _image_url;
		
		private EntityRef<Location> _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onevent_idChanging(int value);
    partial void Onevent_idChanged();
    partial void Onlocation_idChanging(int value);
    partial void Onlocation_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onstart_dateChanging(System.DateTime value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.DateTime value);
    partial void Onend_dateChanged();
    partial void Onstart_timeChanging(System.TimeSpan value);
    partial void Onstart_timeChanged();
    partial void Onend_timeChanging(System.TimeSpan value);
    partial void Onend_timeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    #endregion
		
		public Event_Calendar()
		{
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int event_id
		{
			get
			{
				return this._event_id;
			}
			set
			{
				if ((this._event_id != value))
				{
					this.Onevent_idChanging(value);
					this.SendPropertyChanging();
					this._event_id = value;
					this.SendPropertyChanged("event_id");
					this.Onevent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int NOT NULL")]
		public int location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date NOT NULL")]
		public System.DateTime start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date NOT NULL")]
		public System.DateTime end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="Time NOT NULL")]
		public System.TimeSpan start_time
		{
			get
			{
				return this._start_time;
			}
			set
			{
				if ((this._start_time != value))
				{
					this.Onstart_timeChanging(value);
					this.SendPropertyChanging();
					this._start_time = value;
					this.SendPropertyChanged("start_time");
					this.Onstart_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_time", DbType="Time NOT NULL")]
		public System.TimeSpan end_time
		{
			get
			{
				return this._end_time;
			}
			set
			{
				if ((this._end_time != value))
				{
					this.Onend_timeChanging(value);
					this.SendPropertyChanging();
					this._end_time = value;
					this.SendPropertyChanged("end_time");
					this.Onend_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_url", DbType="VarChar(100)")]
		public string image_url
		{
			get
			{
				return this._image_url;
			}
			set
			{
				if ((this._image_url != value))
				{
					this.Onimage_urlChanging(value);
					this.SendPropertyChanging();
					this._image_url = value;
					this.SendPropertyChanged("image_url");
					this.Onimage_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Event_Calendar", Storage="_Location", ThisKey="location_id", OtherKey="location_id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Event_Calendars.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Event_Calendars.Add(this);
						this._location_id = value.location_id;
					}
					else
					{
						this._location_id = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job_Post")]
	public partial class Job_Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _post_id;
		
		private int _location_id;
		
		private string _title;
		
		private string _type;
		
		private string _summary;
		
		private string _qualification;
		
		private EntityRef<Location> _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpost_idChanging(int value);
    partial void Onpost_idChanged();
    partial void Onlocation_idChanging(int value);
    partial void Onlocation_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnsummaryChanging(string value);
    partial void OnsummaryChanged();
    partial void OnqualificationChanging(string value);
    partial void OnqualificationChanged();
    #endregion
		
		public Job_Post()
		{
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int post_id
		{
			get
			{
				return this._post_id;
			}
			set
			{
				if ((this._post_id != value))
				{
					this.Onpost_idChanging(value);
					this.SendPropertyChanging();
					this._post_id = value;
					this.SendPropertyChanged("post_id");
					this.Onpost_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int NOT NULL")]
		public int location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summary", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if ((this._summary != value))
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qualification", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string qualification
		{
			get
			{
				return this._qualification;
			}
			set
			{
				if ((this._qualification != value))
				{
					this.OnqualificationChanging(value);
					this.SendPropertyChanging();
					this._qualification = value;
					this.SendPropertyChanged("qualification");
					this.OnqualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Job_Post", Storage="_Location", ThisKey="location_id", OtherKey="location_id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Job_Posts.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Job_Posts.Add(this);
						this._location_id = value.location_id;
					}
					else
					{
						this._location_id = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _location_id;
		
		private string _name;
		
		private string _address;
		
		private string _city;
		
		private string _province;
		
		private string _postal;
		
		private System.Nullable<decimal> _lat;
		
		private System.Nullable<decimal> _lon;
		
		private EntitySet<Appointment> _Appointments;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Event_Calendar> _Event_Calendars;
		
		private EntitySet<Job_Post> _Job_Posts;
		
		private EntitySet<Volunteer_Oppoturnity> _Volunteer_Oppoturnities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlocation_idChanging(int value);
    partial void Onlocation_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OnpostalChanging(string value);
    partial void OnpostalChanged();
    partial void OnlatChanging(System.Nullable<decimal> value);
    partial void OnlatChanged();
    partial void OnlonChanging(System.Nullable<decimal> value);
    partial void OnlonChanged();
    #endregion
		
		public Location()
		{
			this._Appointments = new EntitySet<Appointment>(new Action<Appointment>(this.attach_Appointments), new Action<Appointment>(this.detach_Appointments));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Event_Calendars = new EntitySet<Event_Calendar>(new Action<Event_Calendar>(this.attach_Event_Calendars), new Action<Event_Calendar>(this.detach_Event_Calendars));
			this._Job_Posts = new EntitySet<Job_Post>(new Action<Job_Post>(this.attach_Job_Posts), new Action<Job_Post>(this.detach_Job_Posts));
			this._Volunteer_Oppoturnities = new EntitySet<Volunteer_Oppoturnity>(new Action<Volunteer_Oppoturnity>(this.attach_Volunteer_Oppoturnities), new Action<Volunteer_Oppoturnity>(this.detach_Volunteer_Oppoturnities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string postal
		{
			get
			{
				return this._postal;
			}
			set
			{
				if ((this._postal != value))
				{
					this.OnpostalChanging(value);
					this.SendPropertyChanging();
					this._postal = value;
					this.SendPropertyChanged("postal");
					this.OnpostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lat", DbType="Decimal(11,8)")]
		public System.Nullable<decimal> lat
		{
			get
			{
				return this._lat;
			}
			set
			{
				if ((this._lat != value))
				{
					this.OnlatChanging(value);
					this.SendPropertyChanging();
					this._lat = value;
					this.SendPropertyChanged("lat");
					this.OnlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lon", DbType="Decimal(11,8)")]
		public System.Nullable<decimal> lon
		{
			get
			{
				return this._lon;
			}
			set
			{
				if ((this._lon != value))
				{
					this.OnlonChanging(value);
					this.SendPropertyChanging();
					this._lon = value;
					this.SendPropertyChanged("lon");
					this.OnlonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Appointment", Storage="_Appointments", ThisKey="location_id", OtherKey="location_id")]
		public EntitySet<Appointment> Appointments
		{
			get
			{
				return this._Appointments;
			}
			set
			{
				this._Appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Department", Storage="_Departments", ThisKey="location_id", OtherKey="location_id")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Event_Calendar", Storage="_Event_Calendars", ThisKey="location_id", OtherKey="location_id")]
		public EntitySet<Event_Calendar> Event_Calendars
		{
			get
			{
				return this._Event_Calendars;
			}
			set
			{
				this._Event_Calendars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Job_Post", Storage="_Job_Posts", ThisKey="location_id", OtherKey="location_id")]
		public EntitySet<Job_Post> Job_Posts
		{
			get
			{
				return this._Job_Posts;
			}
			set
			{
				this._Job_Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Volunteer_Oppoturnity", Storage="_Volunteer_Oppoturnities", ThisKey="location_id", OtherKey="location_id")]
		public EntitySet<Volunteer_Oppoturnity> Volunteer_Oppoturnities
		{
			get
			{
				return this._Volunteer_Oppoturnities;
			}
			set
			{
				this._Volunteer_Oppoturnities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Event_Calendars(Event_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Event_Calendars(Event_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Job_Posts(Job_Post entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Job_Posts(Job_Post entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Volunteer_Oppoturnities(Volunteer_Oppoturnity entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Volunteer_Oppoturnities(Volunteer_Oppoturnity entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medical_History")]
	public partial class Medical_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _history_id;
		
		private int _patient_id;
		
		private int _doctor_id;
		
		private System.DateTime _date;
		
		private string _description;
		
		private EntityRef<Doctor> _Doctor;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onhistory_idChanging(int value);
    partial void Onhistory_idChanged();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void Ondoctor_idChanging(int value);
    partial void Ondoctor_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Medical_History()
		{
			this._Doctor = default(EntityRef<Doctor>);
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_history_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int history_id
		{
			get
			{
				return this._history_id;
			}
			set
			{
				if ((this._history_id != value))
				{
					this.Onhistory_idChanging(value);
					this.SendPropertyChanging();
					this._history_id = value;
					this.SendPropertyChanged("history_id");
					this.Onhistory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int NOT NULL")]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int NOT NULL")]
		public int doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._Doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_Medical_History", Storage="_Doctor", ThisKey="doctor_id", OtherKey="doctor_id", IsForeignKey=true)]
		public Doctor Doctor
		{
			get
			{
				return this._Doctor.Entity;
			}
			set
			{
				Doctor previousValue = this._Doctor.Entity;
				if (((previousValue != value) 
							|| (this._Doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doctor.Entity = null;
						previousValue.Medical_Histories.Remove(this);
					}
					this._Doctor.Entity = value;
					if ((value != null))
					{
						value.Medical_Histories.Add(this);
						this._doctor_id = value.doctor_id;
					}
					else
					{
						this._doctor_id = default(int);
					}
					this.SendPropertyChanged("Doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Medical_History", Storage="_Patient", ThisKey="patient_id", OtherKey="patient_id", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.Medical_Histories.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.Medical_Histories.Add(this);
						this._patient_id = value.patient_id;
					}
					else
					{
						this._patient_id = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NeewFeed")]
	public partial class NeewFeed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _news_id;
		
		private string _headline;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _author;
		
		private string _published;
		
		private string _photo_url;
		
		private string _category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnews_idChanging(int value);
    partial void Onnews_idChanged();
    partial void OnheadlineChanging(string value);
    partial void OnheadlineChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void OnpublishedChanging(string value);
    partial void OnpublishedChanged();
    partial void Onphoto_urlChanging(string value);
    partial void Onphoto_urlChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    #endregion
		
		public NeewFeed()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_news_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int news_id
		{
			get
			{
				return this._news_id;
			}
			set
			{
				if ((this._news_id != value))
				{
					this.Onnews_idChanging(value);
					this.SendPropertyChanging();
					this._news_id = value;
					this.SendPropertyChanged("news_id");
					this.Onnews_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_headline", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string headline
		{
			get
			{
				return this._headline;
			}
			set
			{
				if ((this._headline != value))
				{
					this.OnheadlineChanging(value);
					this.SendPropertyChanging();
					this._headline = value;
					this.SendPropertyChanged("headline");
					this.OnheadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="VarChar(20)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="VarChar(3)")]
		public string published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo_url", DbType="VarChar(MAX)")]
		public string photo_url
		{
			get
			{
				return this._photo_url;
			}
			set
			{
				if ((this._photo_url != value))
				{
					this.Onphoto_urlChanging(value);
					this.SendPropertyChanging();
					this._photo_url = value;
					this.SendPropertyChanged("photo_url");
					this.Onphoto_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="VarChar(50)")]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OR_Status")]
	public partial class OR_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _status_id;
		
		private int _patient_id;
		
		private System.DateTime _date;
		
		private int _code;
		
		private string _message;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstatus_idChanging(int value);
    partial void Onstatus_idChanged();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OncodeChanging(int value);
    partial void OncodeChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    #endregion
		
		public OR_Status()
		{
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int status_id
		{
			get
			{
				return this._status_id;
			}
			set
			{
				if ((this._status_id != value))
				{
					this.Onstatus_idChanging(value);
					this.SendPropertyChanging();
					this._status_id = value;
					this.SendPropertyChanged("status_id");
					this.Onstatus_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int NOT NULL")]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Int NOT NULL")]
		public int code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="VarChar(255)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_OR_Status", Storage="_Patient", ThisKey="patient_id", OtherKey="patient_id", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.OR_Status.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.OR_Status.Add(this);
						this._patient_id = value.patient_id;
					}
					else
					{
						this._patient_id = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Item")]
	public partial class Order_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private int _product_id;
		
		private int _quantity;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    #endregion
		
		public Order_Item()
		{
			this._Order = default(EntityRef<Order>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Order_Item", Storage="_Order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.Order_Items.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.Order_Items.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order_Item", Storage="_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Order_Items.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Order_Items.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private int _customer_id;
		
		private int _patient_id;
		
		private System.DateTime _date;
		
		private string _message;
		
		private EntitySet<Order_Item> _Order_Items;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    #endregion
		
		public Order()
		{
			this._Order_Items = new EntitySet<Order_Item>(new Action<Order_Item>(this.attach_Order_Items), new Action<Order_Item>(this.detach_Order_Items));
			this._Customer = default(EntityRef<Customer>);
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int NOT NULL")]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="VarChar(100)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Order_Item", Storage="_Order_Items", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<Order_Item> Order_Items
		{
			get
			{
				return this._Order_Items;
			}
			set
			{
				this._Order_Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Order", Storage="_Patient", ThisKey="patient_id", OtherKey="patient_id", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._patient_id = value.patient_id;
					}
					else
					{
						this._patient_id = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_Items(Order_Item entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_Order_Items(Order_Item entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient")]
	public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patient_id;
		
		private string _username;
		
		private string _health_card;
		
		private string _firstname;
		
		private string _lastname;
		
		private System.DateTime _dob;
		
		private string _email;
		
		private string _phone;
		
		private string _address;
		
		private string _city;
		
		private string _province;
		
		private string _postal;
		
		private System.Nullable<int> _status;
		
		private EntitySet<Appointment> _Appointments;
		
		private EntitySet<Medical_History> _Medical_Histories;
		
		private EntitySet<OR_Status> _OR_Status;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Prescription> _Prescriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onhealth_cardChanging(string value);
    partial void Onhealth_cardChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OndobChanging(System.DateTime value);
    partial void OndobChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OnpostalChanging(string value);
    partial void OnpostalChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public Patient()
		{
			this._Appointments = new EntitySet<Appointment>(new Action<Appointment>(this.attach_Appointments), new Action<Appointment>(this.detach_Appointments));
			this._Medical_Histories = new EntitySet<Medical_History>(new Action<Medical_History>(this.attach_Medical_Histories), new Action<Medical_History>(this.detach_Medical_Histories));
			this._OR_Status = new EntitySet<OR_Status>(new Action<OR_Status>(this.attach_OR_Status), new Action<OR_Status>(this.detach_OR_Status));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Prescriptions = new EntitySet<Prescription>(new Action<Prescription>(this.attach_Prescriptions), new Action<Prescription>(this.detach_Prescriptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_health_card", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string health_card
		{
			get
			{
				return this._health_card;
			}
			set
			{
				if ((this._health_card != value))
				{
					this.Onhealth_cardChanging(value);
					this.SendPropertyChanging();
					this._health_card = value;
					this.SendPropertyChanged("health_card");
					this.Onhealth_cardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Date NOT NULL")]
		public System.DateTime dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="VarChar(3)")]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal", DbType="VarChar(8)")]
		public string postal
		{
			get
			{
				return this._postal;
			}
			set
			{
				if ((this._postal != value))
				{
					this.OnpostalChanging(value);
					this.SendPropertyChanging();
					this._postal = value;
					this.SendPropertyChanged("postal");
					this.OnpostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Appointment", Storage="_Appointments", ThisKey="patient_id", OtherKey="patient_id")]
		public EntitySet<Appointment> Appointments
		{
			get
			{
				return this._Appointments;
			}
			set
			{
				this._Appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Medical_History", Storage="_Medical_Histories", ThisKey="patient_id", OtherKey="patient_id")]
		public EntitySet<Medical_History> Medical_Histories
		{
			get
			{
				return this._Medical_Histories;
			}
			set
			{
				this._Medical_Histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_OR_Status", Storage="_OR_Status", ThisKey="patient_id", OtherKey="patient_id")]
		public EntitySet<OR_Status> OR_Status
		{
			get
			{
				return this._OR_Status;
			}
			set
			{
				this._OR_Status.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Order", Storage="_Orders", ThisKey="patient_id", OtherKey="patient_id")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Prescription", Storage="_Prescriptions", ThisKey="patient_id", OtherKey="patient_id")]
		public EntitySet<Prescription> Prescriptions
		{
			get
			{
				return this._Prescriptions;
			}
			set
			{
				this._Prescriptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
		
		private void attach_Medical_Histories(Medical_History entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_Medical_Histories(Medical_History entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
		
		private void attach_OR_Status(OR_Status entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_OR_Status(OR_Status entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
		
		private void attach_Prescriptions(Prescription entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_Prescriptions(Prescription entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prescription")]
	public partial class Prescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _prescription_id;
		
		private int _patient_id;
		
		private int _doctor_id;
		
		private System.DateTime _date;
		
		private string _description;
		
		private EntitySet<Prescription_Refill> _Prescription_Refills;
		
		private EntityRef<Doctor> _Doctor;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprescription_idChanging(int value);
    partial void Onprescription_idChanged();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void Ondoctor_idChanging(int value);
    partial void Ondoctor_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Prescription()
		{
			this._Prescription_Refills = new EntitySet<Prescription_Refill>(new Action<Prescription_Refill>(this.attach_Prescription_Refills), new Action<Prescription_Refill>(this.detach_Prescription_Refills));
			this._Doctor = default(EntityRef<Doctor>);
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prescription_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int prescription_id
		{
			get
			{
				return this._prescription_id;
			}
			set
			{
				if ((this._prescription_id != value))
				{
					this.Onprescription_idChanging(value);
					this.SendPropertyChanging();
					this._prescription_id = value;
					this.SendPropertyChanged("prescription_id");
					this.Onprescription_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int NOT NULL")]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int NOT NULL")]
		public int doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._Doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prescription_Prescription_Refill", Storage="_Prescription_Refills", ThisKey="prescription_id", OtherKey="prescription_id")]
		public EntitySet<Prescription_Refill> Prescription_Refills
		{
			get
			{
				return this._Prescription_Refills;
			}
			set
			{
				this._Prescription_Refills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_Prescription", Storage="_Doctor", ThisKey="doctor_id", OtherKey="doctor_id", IsForeignKey=true)]
		public Doctor Doctor
		{
			get
			{
				return this._Doctor.Entity;
			}
			set
			{
				Doctor previousValue = this._Doctor.Entity;
				if (((previousValue != value) 
							|| (this._Doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doctor.Entity = null;
						previousValue.Prescriptions.Remove(this);
					}
					this._Doctor.Entity = value;
					if ((value != null))
					{
						value.Prescriptions.Add(this);
						this._doctor_id = value.doctor_id;
					}
					else
					{
						this._doctor_id = default(int);
					}
					this.SendPropertyChanged("Doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Prescription", Storage="_Patient", ThisKey="patient_id", OtherKey="patient_id", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.Prescriptions.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.Prescriptions.Add(this);
						this._patient_id = value.patient_id;
					}
					else
					{
						this._patient_id = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prescription_Refills(Prescription_Refill entity)
		{
			this.SendPropertyChanging();
			entity.Prescription = this;
		}
		
		private void detach_Prescription_Refills(Prescription_Refill entity)
		{
			this.SendPropertyChanging();
			entity.Prescription = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prescription_Refill")]
	public partial class Prescription_Refill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _refill_id;
		
		private int _prescription_id;
		
		private System.DateTime _refill_date;
		
		private EntityRef<Prescription> _Prescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrefill_idChanging(int value);
    partial void Onrefill_idChanged();
    partial void Onprescription_idChanging(int value);
    partial void Onprescription_idChanged();
    partial void Onrefill_dateChanging(System.DateTime value);
    partial void Onrefill_dateChanged();
    #endregion
		
		public Prescription_Refill()
		{
			this._Prescription = default(EntityRef<Prescription>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refill_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int refill_id
		{
			get
			{
				return this._refill_id;
			}
			set
			{
				if ((this._refill_id != value))
				{
					this.Onrefill_idChanging(value);
					this.SendPropertyChanging();
					this._refill_id = value;
					this.SendPropertyChanged("refill_id");
					this.Onrefill_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prescription_id", DbType="Int NOT NULL")]
		public int prescription_id
		{
			get
			{
				return this._prescription_id;
			}
			set
			{
				if ((this._prescription_id != value))
				{
					if (this._Prescription.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprescription_idChanging(value);
					this.SendPropertyChanging();
					this._prescription_id = value;
					this.SendPropertyChanged("prescription_id");
					this.Onprescription_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refill_date", DbType="Date NOT NULL")]
		public System.DateTime refill_date
		{
			get
			{
				return this._refill_date;
			}
			set
			{
				if ((this._refill_date != value))
				{
					this.Onrefill_dateChanging(value);
					this.SendPropertyChanging();
					this._refill_date = value;
					this.SendPropertyChanged("refill_date");
					this.Onrefill_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prescription_Prescription_Refill", Storage="_Prescription", ThisKey="prescription_id", OtherKey="prescription_id", IsForeignKey=true)]
		public Prescription Prescription
		{
			get
			{
				return this._Prescription.Entity;
			}
			set
			{
				Prescription previousValue = this._Prescription.Entity;
				if (((previousValue != value) 
							|| (this._Prescription.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prescription.Entity = null;
						previousValue.Prescription_Refills.Remove(this);
					}
					this._Prescription.Entity = value;
					if ((value != null))
					{
						value.Prescription_Refills.Add(this);
						this._prescription_id = value.prescription_id;
					}
					else
					{
						this._prescription_id = default(int);
					}
					this.SendPropertyChanged("Prescription");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _product_id;
		
		private string _name;
		
		private string _description;
		
		private string _image_url;
		
		private decimal _price;
		
		private int _publish;
		
		private EntitySet<Order_Item> _Order_Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnpublishChanging(int value);
    partial void OnpublishChanged();
    #endregion
		
		public Product()
		{
			this._Order_Items = new EntitySet<Order_Item>(new Action<Order_Item>(this.attach_Order_Items), new Action<Order_Item>(this.detach_Order_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_url", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string image_url
		{
			get
			{
				return this._image_url;
			}
			set
			{
				if ((this._image_url != value))
				{
					this.Onimage_urlChanging(value);
					this.SendPropertyChanging();
					this._image_url = value;
					this.SendPropertyChanged("image_url");
					this.Onimage_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(6,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publish", DbType="Int NOT NULL")]
		public int publish
		{
			get
			{
				return this._publish;
			}
			set
			{
				if ((this._publish != value))
				{
					this.OnpublishChanging(value);
					this.SendPropertyChanging();
					this._publish = value;
					this.SendPropertyChanged("publish");
					this.OnpublishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order_Item", Storage="_Order_Items", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<Order_Item> Order_Items
		{
			get
			{
				return this._Order_Items;
			}
			set
			{
				this._Order_Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_Items(Order_Item entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Order_Items(Order_Item entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volunteer_Oppoturnity")]
	public partial class Volunteer_Oppoturnity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _post_id;
		
		private int _location_id;
		
		private int _department_id;
		
		private string _title;
		
		private System.DateTime _posting_date;
		
		private System.DateTime _closing_date;
		
		private string _duties;
		
		private string _description;
		
		private string _contact;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Location> _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpost_idChanging(int value);
    partial void Onpost_idChanged();
    partial void Onlocation_idChanging(int value);
    partial void Onlocation_idChanged();
    partial void Ondepartment_idChanging(int value);
    partial void Ondepartment_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onposting_dateChanging(System.DateTime value);
    partial void Onposting_dateChanged();
    partial void Onclosing_dateChanging(System.DateTime value);
    partial void Onclosing_dateChanged();
    partial void OndutiesChanging(string value);
    partial void OndutiesChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    #endregion
		
		public Volunteer_Oppoturnity()
		{
			this._Department = default(EntityRef<Department>);
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int post_id
		{
			get
			{
				return this._post_id;
			}
			set
			{
				if ((this._post_id != value))
				{
					this.Onpost_idChanging(value);
					this.SendPropertyChanging();
					this._post_id = value;
					this.SendPropertyChanged("post_id");
					this.Onpost_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int NOT NULL")]
		public int location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="Int NOT NULL")]
		public int department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posting_date", DbType="Date NOT NULL")]
		public System.DateTime posting_date
		{
			get
			{
				return this._posting_date;
			}
			set
			{
				if ((this._posting_date != value))
				{
					this.Onposting_dateChanging(value);
					this.SendPropertyChanging();
					this._posting_date = value;
					this.SendPropertyChanged("posting_date");
					this.Onposting_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closing_date", DbType="Date NOT NULL")]
		public System.DateTime closing_date
		{
			get
			{
				return this._closing_date;
			}
			set
			{
				if ((this._closing_date != value))
				{
					this.Onclosing_dateChanging(value);
					this.SendPropertyChanging();
					this._closing_date = value;
					this.SendPropertyChanged("closing_date");
					this.Onclosing_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duties", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string duties
		{
			get
			{
				return this._duties;
			}
			set
			{
				if ((this._duties != value))
				{
					this.OndutiesChanging(value);
					this.SendPropertyChanging();
					this._duties = value;
					this.SendPropertyChanged("duties");
					this.OndutiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Volunteer_Oppoturnity", Storage="_Department", ThisKey="department_id", OtherKey="department_id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Volunteer_Oppoturnities.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Volunteer_Oppoturnities.Add(this);
						this._department_id = value.department_id;
					}
					else
					{
						this._department_id = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Volunteer_Oppoturnity", Storage="_Location", ThisKey="location_id", OtherKey="location_id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Volunteer_Oppoturnities.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Volunteer_Oppoturnities.Add(this);
						this._location_id = value.location_id;
					}
					else
					{
						this._location_id = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YouTube")]
	public partial class YouTube : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _video_id;
		
		private string _title;
		
		private string _description;
		
		private System.DateTime _date;
		
		private string _author;
		
		private string _category;
		
		private string _published;
		
		private string _photo_url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvideo_idChanging(int value);
    partial void Onvideo_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OnpublishedChanging(string value);
    partial void OnpublishedChanged();
    partial void Onphoto_urlChanging(string value);
    partial void Onphoto_urlChanged();
    #endregion
		
		public YouTube()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(300)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo_url", DbType="VarChar(100)")]
		public string photo_url
		{
			get
			{
				return this._photo_url;
			}
			set
			{
				if ((this._photo_url != value))
				{
					this.Onphoto_urlChanging(value);
					this.SendPropertyChanging();
					this._photo_url = value;
					this.SendPropertyChanged("photo_url");
					this.Onphoto_urlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job_Application")]
	public partial class Job_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _resume_id;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _email;
		
		private string _file_url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onresume_idChanging(int value);
    partial void Onresume_idChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onfile_urlChanging(string value);
    partial void Onfile_urlChanged();
    #endregion
		
		public Job_Application()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resume_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int resume_id
		{
			get
			{
				return this._resume_id;
			}
			set
			{
				if ((this._resume_id != value))
				{
					this.Onresume_idChanging(value);
					this.SendPropertyChanging();
					this._resume_id = value;
					this.SendPropertyChanged("resume_id");
					this.Onresume_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(30)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(30)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(30)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_url", DbType="VarChar(100)")]
		public string file_url
		{
			get
			{
				return this._file_url;
			}
			set
			{
				if ((this._file_url != value))
				{
					this.Onfile_urlChanging(value);
					this.SendPropertyChanging();
					this._file_url = value;
					this.SendPropertyChanged("file_url");
					this.Onfile_urlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
